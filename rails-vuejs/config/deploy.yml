# Name of your application. Used to uniquely configure containers.
service: rails-vuejs

# Name of the container image.
image: guillaumebriday/rails-vuejs

# Deploy to these servers.
servers:
  web:
    hosts:
      - 163.172.172.132
    labels:
      traefik.http.routers.rails_vuejs.entrypoints: websecure
      traefik.http.routers.rails_vuejs.rule: Host(`rails-vuejs.guillaumebriday.fr`)
      traefik.http.routers.rails_vuejs.tls.certresolver: letsencrypt

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: guillaumebriday

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    RAILS_SERVE_STATIC_FILES: true
  secret:
    - RAILS_MASTER_KEY

volumes:
  - "data:/rails/data"

# Configure custom arguments for Traefik
traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "guillaumebriday@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web

builder:
  local:
    arch: amd64
  cache:
    type: registry
    options: mode=max,image-manifest=true,oci-mediatypes=true
